{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Franco\\\\Desktop\\\\Proyecto_Notificaciones\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nconst USERS = ['Usuario 1', 'Usuario 2', 'Usuario 3', 'Usuario 4'];\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const [notifications, setNotifications] = useState([]);\n  const [notificationType, setNotificationType] = useState('global'); // 'global' or 'private'\n  const [unreadNotifications, setUnreadNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    // Obtener notificaciones desde el backend al cargar la pÃ¡gina\n    fetch('http://localhost:4000/notifications').then(res => res.json()).then(data => {\n      setNotifications(data);\n      setUnreadCount(data.length); // Contar las notificaciones sin leer\n    }).catch(err => console.error('Error fetching notifications:', err));\n    socket.on('user_update', users => {\n      setUsers(users);\n    });\n    socket.on('notification', notification => {\n      setNotifications(prevNotifications => [...prevNotifications, notification]);\n      setUnreadNotifications(prev => [...prev, notification]);\n      setUnreadCount(prev => prev + 1);\n    });\n    return () => {\n      socket.off('user_update');\n      socket.off('notification');\n    };\n  }, []);\n  const handleUserClick = username => {\n    setUser(username);\n    socket.emit('user_connected', username);\n    setIsConnected(true);\n    setUnreadCount(0);\n  };\n  const handleUserSelect = selectedUser => {\n    setSelectedUser(selectedUser);\n    setUnreadCount(0); // Reset unread notifications for the selected user\n  };\n  const handleSendNotification = () => {\n    if (message.trim()) {\n      const notification = {\n        sender: user,\n        message: message,\n        type: notificationType,\n        receiver: notificationType === 'private' ? selectedUser : 'all',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      socket.emit('send_notification', notification);\n      setMessage('');\n      setUnreadCount(0); // Reset unread notifications when sending one\n    }\n  };\n  const handleNotificationTypeChange = type => {\n    setNotificationType(type);\n    if (type === 'private') {\n      setUnreadCount(0); // Reset unread count if private is selected\n    }\n  };\n  const handleBellClick = () => {\n    setNotifications(prev => [...prev, ...unreadNotifications]);\n    setUnreadNotifications([]);\n    setUnreadCount(0);\n  };\n  const toggleConnection = () => {\n    if (isConnected) {\n      socket.emit('disconnectUser', user);\n      setIsConnected(false);\n      setUnreadCount(unreadNotifications.length);\n    } else {\n      socket.emit('connectUser', user);\n      setIsConnected(true);\n      setUnreadCount(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Selecciona tu usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), USERS.map(username => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 text-white py-2 px-4 rounded-md m-2\",\n          onClick: () => handleUserClick(username),\n          children: username\n        }, username, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/4 bg-gray-100 border-r border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between p-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-semibold\",\n              children: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-indicator\",\n              style: {\n                backgroundColor: isConnected ? 'green' : 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"connect-button\",\n              onClick: toggleConnection,\n              children: isConnected ? 'Desconectar' : 'Conectar'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-semibold mb-2\",\n            children: \"Usuarios Conectados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), users.map(u => u !== user && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center p-2 cursor-pointer\",\n            onClick: () => handleUserSelect(u),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: u\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 23\n            }, this)\n          }, u, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-semibold mb-2\",\n            children: \"Notificaciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-bell cursor-pointer\",\n            onClick: handleBellClick,\n            children: [\"\\uD83D\\uDECE\\uFE0F\", unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"badge\",\n              children: unreadCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), notifications.map((n, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: n.sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this), \": \", n.message, \" (\", n.timestamp, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-3/4 p-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Enviar Notificaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tipo de notificaci\\xF3n:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleNotificationTypeChange('global'),\n              children: \"Global\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleNotificationTypeChange('private'),\n              children: \"Privada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), notificationType === 'private' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Selecciona el destinatario:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedUser,\n            onChange: e => setSelectedUser(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccionar Usuario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this), users.map(u => u !== user && /*#__PURE__*/_jsxDEV(\"option\", {\n              value: u,\n              children: u\n            }, u, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 51\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Escribe tu mensaje\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 text-white py-2 px-4 rounded-md mt-4\",\n          onClick: handleSendNotification,\n          children: \"Enviar Notificaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"By6BQf1M95pTQldA8z0VA9N0XDE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","USERS","App","_s","user","setUser","users","setUsers","selectedUser","setSelectedUser","message","setMessage","notifications","setNotifications","notificationType","setNotificationType","unreadNotifications","setUnreadNotifications","unreadCount","setUnreadCount","isConnected","setIsConnected","fetch","then","res","json","data","length","catch","err","console","error","on","notification","prevNotifications","prev","off","handleUserClick","username","emit","handleUserSelect","handleSendNotification","trim","sender","type","receiver","timestamp","Date","toLocaleTimeString","handleNotificationTypeChange","handleBellClick","toggleConnection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","style","backgroundColor","u","n","index","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Franco/Desktop/Proyecto_Notificaciones/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport './App.css';\r\n\r\nconst socket = io('http://localhost:4000');\r\nconst USERS = ['Usuario 1', 'Usuario 2', 'Usuario 3', 'Usuario 4'];\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [notificationType, setNotificationType] = useState('global'); // 'global' or 'private'\r\n  const [unreadNotifications, setUnreadNotifications] = useState([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Obtener notificaciones desde el backend al cargar la pÃ¡gina\r\n    fetch('http://localhost:4000/notifications')\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setNotifications(data);\r\n        setUnreadCount(data.length);  // Contar las notificaciones sin leer\r\n      })\r\n      .catch((err) => console.error('Error fetching notifications:', err));\r\n\r\n    socket.on('user_update', (users) => {\r\n      setUsers(users);\r\n    });\r\n\r\n    socket.on('notification', (notification) => {\r\n      setNotifications((prevNotifications) => [...prevNotifications, notification]);\r\n      setUnreadNotifications((prev) => [...prev, notification]);\r\n      setUnreadCount((prev) => prev + 1);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('user_update');\r\n      socket.off('notification');\r\n    };\r\n  }, []);\r\n\r\n  const handleUserClick = (username) => {\r\n    setUser(username);\r\n    socket.emit('user_connected', username);\r\n    setIsConnected(true);\r\n    setUnreadCount(0);\r\n  };\r\n\r\n  const handleUserSelect = (selectedUser) => {\r\n    setSelectedUser(selectedUser);\r\n    setUnreadCount(0);  // Reset unread notifications for the selected user\r\n  };\r\n\r\n  const handleSendNotification = () => {\r\n    if (message.trim()) {\r\n      const notification = {\r\n        sender: user,\r\n        message: message,\r\n        type: notificationType,\r\n        receiver: notificationType === 'private' ? selectedUser : 'all',\r\n        timestamp: new Date().toLocaleTimeString(),\r\n      };\r\n\r\n      socket.emit('send_notification', notification);\r\n      setMessage('');\r\n      setUnreadCount(0);  // Reset unread notifications when sending one\r\n    }\r\n  };\r\n\r\n  const handleNotificationTypeChange = (type) => {\r\n    setNotificationType(type);\r\n    if (type === 'private') {\r\n      setUnreadCount(0);  // Reset unread count if private is selected\r\n    }\r\n  };\r\n\r\n  const handleBellClick = () => {\r\n    setNotifications((prev) => [...prev, ...unreadNotifications]);\r\n    setUnreadNotifications([]);\r\n    setUnreadCount(0);\r\n  };\r\n\r\n  const toggleConnection = () => {\r\n    if (isConnected) {\r\n      socket.emit('disconnectUser', user);\r\n      setIsConnected(false);\r\n      setUnreadCount(unreadNotifications.length);\r\n    } else {\r\n      socket.emit('connectUser', user);\r\n      setIsConnected(true);\r\n      setUnreadCount(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      {!user ? (\r\n        <div className=\"flex justify-center items-center w-full\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-2xl font-semibold mb-4\">Selecciona tu usuario</h2>\r\n            {USERS.map((username) => (\r\n              <button\r\n                key={username}\r\n                className=\"bg-blue-500 text-white py-2 px-4 rounded-md m-2\"\r\n                onClick={() => handleUserClick(username)}\r\n              >\r\n                {username}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"w-1/4 bg-gray-100 border-r border-gray-200\">\r\n            <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"font-semibold\">{user}</div>\r\n                <div\r\n                  className=\"status-indicator\"\r\n                  style={{ backgroundColor: isConnected ? 'green' : 'red' }}\r\n                ></div>\r\n                <button className=\"connect-button\" onClick={toggleConnection}>\r\n                  {isConnected ? 'Desconectar' : 'Conectar'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-4\">\r\n              <h2 className=\"font-semibold mb-2\">Usuarios Conectados</h2>\r\n              {users.map(\r\n                (u) =>\r\n                  u !== user && (\r\n                    <div\r\n                      key={u}\r\n                      className=\"flex items-center p-2 cursor-pointer\"\r\n                      onClick={() => handleUserSelect(u)}\r\n                    >\r\n                      <div>{u}</div>\r\n                    </div>\r\n                  )\r\n              )}\r\n            </div>\r\n            <div className=\"p-4\">\r\n              <h2 className=\"font-semibold mb-2\">Notificaciones</h2>\r\n              <div\r\n                className=\"notification-bell cursor-pointer\"\r\n                onClick={handleBellClick}\r\n              >\r\n                ðï¸\r\n                {unreadCount > 0 && (\r\n                  <div className=\"badge\">{unreadCount}</div>\r\n                )}\r\n              </div>\r\n              {notifications.map((n, index) => (\r\n                <div key={index} className=\"notification-item\">\r\n                  <div>\r\n                    <strong>{n.sender}</strong>: {n.message} ({n.timestamp})\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"w-3/4 p-8\">\r\n            <h2 className=\"text-2xl font-semibold mb-4\">Enviar NotificaciÃ³n</h2>\r\n            <div>\r\n              <label>Tipo de notificaciÃ³n:</label>\r\n              <div>\r\n                <button onClick={() => handleNotificationTypeChange('global')}>\r\n                  Global\r\n                </button>\r\n                <button onClick={() => handleNotificationTypeChange('private')}>\r\n                  Privada\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {notificationType === 'private' && (\r\n              <div>\r\n                <label>Selecciona el destinatario:</label>\r\n                <select\r\n                  value={selectedUser}\r\n                  onChange={(e) => setSelectedUser(e.target.value)}\r\n                >\r\n                  <option value=\"\">Seleccionar Usuario</option>\r\n                  {users.map((u) => u !== user && <option key={u} value={u}>{u}</option>)}\r\n                </select>\r\n              </div>\r\n            )}\r\n            <div>\r\n              <textarea\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                placeholder=\"Escribe tu mensaje\"\r\n              />\r\n            </div>\r\n            <button\r\n              className=\"bg-blue-500 text-white py-2 px-4 rounded-md mt-4\"\r\n              onClick={handleSendNotification}\r\n            >\r\n              Enviar NotificaciÃ³n\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}