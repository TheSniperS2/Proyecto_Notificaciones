{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Franco\\\\Desktop\\\\Proyecto_Notificaciones\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Notification from './Notification';\nimport './App.css'; // Importa el archivo CSS para estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState('');\n  const [notifications, setNotifications] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null); // Usuario seleccionado para el chat\n  const [chatMessages, setChatMessages] = useState([]); // Mensajes del chat\n\n  useEffect(() => {\n    // Escuchar actualización de usuarios\n    socket.on('user_update', users => {\n      setUsers(users);\n    });\n\n    // Escuchar notificaciones\n    socket.on('notification', notification => {\n      setNotifications(prevNotifications => {\n        const newNotifications = [notification, ...prevNotifications];\n        return newNotifications.slice(0, 10); // Limitar a 10 notificaciones\n      });\n    });\n\n    // Escuchar mensajes del chat\n    socket.on('chat_message', message => {\n      if (message.sender === user && message.receiver === selectedUser || message.receiver === user && message.sender === selectedUser) {\n        setChatMessages(prevMessages => [...prevMessages, message]);\n      }\n    });\n    return () => {\n      socket.off('user_update');\n      socket.off('notification');\n      socket.off('chat_message');\n    };\n  }, [user, selectedUser]);\n  const handleUserSelect = user => {\n    setUser(user);\n    socket.emit('user_connected', user);\n  };\n  const handleDisconnect = () => {\n    socket.emit('user_disconnect');\n    setUser(null);\n    setSelectedUser(null); // Resetear el usuario seleccionado para chat\n    setChatMessages([]); // Limpiar el chat\n  };\n  const handleSendNotification = () => {\n    if (message.trim()) {\n      socket.emit('send_notification', {\n        message: message,\n        user: user,\n        target: 'all' // Puede cambiarse a un usuario específico si es necesario\n      });\n      setMessage('');\n    }\n  };\n  const handleSelectChatUser = user => {\n    setSelectedUser(user);\n    setChatMessages([]); // Limpiar el chat anterior\n  };\n  const handleSendMessage = () => {\n    if (message.trim() && selectedUser) {\n      const chatMessage = {\n        sender: user,\n        receiver: selectedUser,\n        message: message,\n        timestamp: new Date()\n      };\n      socket.emit('send_chat_message', chatMessage);\n      setMessage('');\n      setChatMessages(prevMessages => [...prevMessages, chatMessage]); // Agregar al chat local\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"user-button\",\n        onClick: () => handleUserSelect('Usuario 1'),\n        children: \"Usuario 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"user-button\",\n        onClick: () => handleUserSelect('Usuario 2'),\n        children: \"Usuario 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"user-button\",\n        onClick: () => handleUserSelect('Usuario 3'),\n        children: \"Usuario 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Bienvenido, \", user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"disconnect-button\",\n        onClick: handleDisconnect,\n        children: \"Desconectar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-user-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Selecciona un usuario para chatear:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), users.map(u => u !== user ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"user-chat-button\",\n          onClick: () => handleSelectChatUser(u),\n          children: u\n        }, u, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }, this) : null)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Chat con \", selectedUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-box\",\n          children: chatMessages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: msg.sender === user ? 'my-message' : 'other-message',\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.sender, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 41\n            }, this), \" \", msg.message]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"message-input\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Escribe un mensaje\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-button\",\n            onClick: handleSendMessage,\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"message-input\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Escribe una notificaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendNotification,\n          children: \"Enviar Notificaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Notification, {\n        notifications: notifications\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"V+SiygW50PMakzDa6vPwey7ey7s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","Notification","jsxDEV","_jsxDEV","socket","App","_s","user","setUser","users","setUsers","message","setMessage","notifications","setNotifications","selectedUser","setSelectedUser","chatMessages","setChatMessages","on","notification","prevNotifications","newNotifications","slice","sender","receiver","prevMessages","off","handleUserSelect","emit","handleDisconnect","handleSendNotification","trim","target","handleSelectChatUser","handleSendMessage","chatMessage","timestamp","Date","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","u","msg","idx","value","onChange","e","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Franco/Desktop/Proyecto_Notificaciones/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Notification from './Notification';\r\nimport './App.css'; // Importa el archivo CSS para estilos\r\n\r\nconst socket = io('http://localhost:4000');\r\n\r\nfunction App() {\r\n    const [user, setUser] = useState(null);\r\n    const [users, setUsers] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null); // Usuario seleccionado para el chat\r\n    const [chatMessages, setChatMessages] = useState([]); // Mensajes del chat\r\n\r\n    useEffect(() => {\r\n        // Escuchar actualización de usuarios\r\n        socket.on('user_update', (users) => {\r\n            setUsers(users);\r\n        });\r\n\r\n        // Escuchar notificaciones\r\n        socket.on('notification', (notification) => {\r\n            setNotifications((prevNotifications) => {\r\n                const newNotifications = [notification, ...prevNotifications];\r\n                return newNotifications.slice(0, 10); // Limitar a 10 notificaciones\r\n            });\r\n        });\r\n\r\n        // Escuchar mensajes del chat\r\n        socket.on('chat_message', (message) => {\r\n            if (\r\n                (message.sender === user && message.receiver === selectedUser) ||\r\n                (message.receiver === user && message.sender === selectedUser)\r\n            ) {\r\n                setChatMessages((prevMessages) => [...prevMessages, message]);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.off('user_update');\r\n            socket.off('notification');\r\n            socket.off('chat_message');\r\n        };\r\n    }, [user, selectedUser]);\r\n\r\n    const handleUserSelect = (user) => {\r\n        setUser(user);\r\n        socket.emit('user_connected', user);\r\n    };\r\n\r\n    const handleDisconnect = () => {\r\n        socket.emit('user_disconnect');\r\n        setUser(null);\r\n        setSelectedUser(null); // Resetear el usuario seleccionado para chat\r\n        setChatMessages([]); // Limpiar el chat\r\n    };\r\n\r\n    const handleSendNotification = () => {\r\n        if (message.trim()) {\r\n            socket.emit('send_notification', {\r\n                message: message,\r\n                user: user,\r\n                target: 'all', // Puede cambiarse a un usuario específico si es necesario\r\n            });\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    const handleSelectChatUser = (user) => {\r\n        setSelectedUser(user);\r\n        setChatMessages([]); // Limpiar el chat anterior\r\n    };\r\n\r\n    const handleSendMessage = () => {\r\n        if (message.trim() && selectedUser) {\r\n            const chatMessage = {\r\n                sender: user,\r\n                receiver: selectedUser,\r\n                message: message,\r\n                timestamp: new Date(),\r\n            };\r\n            socket.emit('send_chat_message', chatMessage);\r\n            setMessage('');\r\n            setChatMessages((prevMessages) => [...prevMessages, chatMessage]); // Agregar al chat local\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {!user ? (\r\n                <div className=\"user-selection\">\r\n                    <button className=\"user-button\" onClick={() => handleUserSelect('Usuario 1')}>Usuario 1</button>\r\n                    <button className=\"user-button\" onClick={() => handleUserSelect('Usuario 2')}>Usuario 2</button>\r\n                    <button className=\"user-button\" onClick={() => handleUserSelect('Usuario 3')}>Usuario 3</button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"dashboard\">\r\n                    <h2>Bienvenido, {user}</h2>\r\n                    <button className=\"disconnect-button\" onClick={handleDisconnect}>Desconectar</button>\r\n\r\n                    {/* Seleccionar usuario para chat */}\r\n                    <div className=\"chat-user-selection\">\r\n                        <h3>Selecciona un usuario para chatear:</h3>\r\n                        {users.map((u) =>\r\n                            u !== user ? (\r\n                                <button\r\n                                    key={u}\r\n                                    className=\"user-chat-button\"\r\n                                    onClick={() => handleSelectChatUser(u)}\r\n                                >\r\n                                    {u}\r\n                                </button>\r\n                            ) : null\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Si se ha seleccionado un usuario para chat */}\r\n                    {selectedUser && (\r\n                        <div className=\"chat-container\">\r\n                            <h3>Chat con {selectedUser}</h3>\r\n                            <div className=\"chat-box\">\r\n                                {chatMessages.map((msg, idx) => (\r\n                                    <div key={idx} className={msg.sender === user ? 'my-message' : 'other-message'}>\r\n                                        <strong>{msg.sender}:</strong> {msg.message}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            <div className=\"message-input-container\">\r\n                                <textarea\r\n                                    className=\"message-input\"\r\n                                    value={message}\r\n                                    onChange={(e) => setMessage(e.target.value)}\r\n                                    placeholder=\"Escribe un mensaje\"\r\n                                />\r\n                                <button className=\"send-button\" onClick={handleSendMessage}>\r\n                                    Enviar\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Formulario de notificaciones */}\r\n                    <div className=\"notification-form\">\r\n                        <textarea\r\n                            className=\"message-input\"\r\n                            value={message}\r\n                            onChange={(e) => setMessage(e.target.value)}\r\n                            placeholder=\"Escribe una notificación\"\r\n                        />\r\n                        <button className=\"send-button\" onClick={handleSendNotification}>Enviar Notificación</button>\r\n                    </div>\r\n                    <Notification notifications={notifications} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}