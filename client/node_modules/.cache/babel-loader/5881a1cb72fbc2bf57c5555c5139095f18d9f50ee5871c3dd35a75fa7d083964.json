{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Franco\\\\Desktop\\\\Proyecto_Notificaciones\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Notification from './Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState('');\n  const [notifications, setNotifications] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null); // Estado para el usuario con el que chatear\n  const [chatMessages, setChatMessages] = useState([]); // Estado para almacenar los mensajes del chat\n\n  useEffect(() => {\n    socket.on('user_update', users => {\n      setUsers(users);\n    });\n    socket.on('notification', notification => {\n      setNotifications(prevNotifications => {\n        const newNotifications = [notification, ...prevNotifications];\n        return newNotifications.slice(0, 10); // Limitar a 10 notificaciones\n      });\n    });\n    socket.on('chat_message', message => {\n      if (selectedUser === message.sender || selectedUser === message.receiver) {\n        setChatMessages(prevMessages => [...prevMessages, message]);\n      }\n    });\n    return () => {\n      socket.off('user_update');\n      socket.off('notification');\n      socket.off('chat_message');\n    };\n  }, [selectedUser]);\n  const handleUserSelect = user => {\n    setUser(user);\n    socket.emit('user_connected', user);\n  };\n  const handleDisconnect = () => {\n    socket.emit('user_disconnect');\n    setUser(null);\n    setSelectedUser(null);\n    setChatMessages([]); // Limpiar el historial de chat\n  };\n  const handleSendNotification = () => {\n    if (message.trim()) {\n      socket.emit('send_notification', {\n        message: message,\n        user: user,\n        target: 'all'\n      });\n      setMessage('');\n    }\n  };\n  const handleSelectChatUser = user => {\n    setSelectedUser(user);\n    setChatMessages([]); // Limpiar el chat anterior\n  };\n  const handleSendMessage = () => {\n    if (message.trim() && selectedUser) {\n      const chatMessage = {\n        sender: user,\n        receiver: selectedUser,\n        message: message,\n        timestamp: new Date()\n      };\n      socket.emit('send_chat_message', chatMessage);\n      setMessage('');\n      setChatMessages(prevMessages => [...prevMessages, chatMessage]); // Agregar al chat local\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserSelect('Usuario 1'),\n        children: \"Usuario 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserSelect('Usuario 2'),\n        children: \"Usuario 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserSelect('Usuario 3'),\n        children: \"Usuario 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Bienvenido, \", user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDisconnect,\n        children: \"Desconectar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Selecciona un usuario para chatear:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: users.map(u => u !== user && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSelectChatUser(u),\n            children: u\n          }, u, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Chat con \", selectedUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: chatMessages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.sender, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 41\n            }, this), msg.message]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Escribe un mensaje\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Escribe una notificaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendNotification,\n          children: \"Enviar Notificaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Notification, {\n        notifications: notifications\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"V+SiygW50PMakzDa6vPwey7ey7s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","Notification","jsxDEV","_jsxDEV","socket","App","_s","user","setUser","users","setUsers","message","setMessage","notifications","setNotifications","selectedUser","setSelectedUser","chatMessages","setChatMessages","on","notification","prevNotifications","newNotifications","slice","sender","receiver","prevMessages","off","handleUserSelect","emit","handleDisconnect","handleSendNotification","trim","target","handleSelectChatUser","handleSendMessage","chatMessage","timestamp","Date","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","u","msg","idx","value","onChange","e","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Franco/Desktop/Proyecto_Notificaciones/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Notification from './Notification';\r\n\r\nconst socket = io('http://localhost:4000');\r\n\r\nfunction App() {\r\n    const [user, setUser] = useState(null);\r\n    const [users, setUsers] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null); // Estado para el usuario con el que chatear\r\n    const [chatMessages, setChatMessages] = useState([]); // Estado para almacenar los mensajes del chat\r\n\r\n    useEffect(() => {\r\n        socket.on('user_update', (users) => {\r\n            setUsers(users);\r\n        });\r\n\r\n        socket.on('notification', (notification) => {\r\n            setNotifications((prevNotifications) => {\r\n                const newNotifications = [notification, ...prevNotifications];\r\n                return newNotifications.slice(0, 10); // Limitar a 10 notificaciones\r\n            });\r\n        });\r\n\r\n        socket.on('chat_message', (message) => {\r\n            if (selectedUser === message.sender || selectedUser === message.receiver) {\r\n                setChatMessages((prevMessages) => [...prevMessages, message]);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.off('user_update');\r\n            socket.off('notification');\r\n            socket.off('chat_message');\r\n        };\r\n    }, [selectedUser]);\r\n\r\n    const handleUserSelect = (user) => {\r\n        setUser(user);\r\n        socket.emit('user_connected', user);\r\n    };\r\n\r\n    const handleDisconnect = () => {\r\n        socket.emit('user_disconnect');\r\n        setUser(null);\r\n        setSelectedUser(null);\r\n        setChatMessages([]); // Limpiar el historial de chat\r\n    };\r\n\r\n    const handleSendNotification = () => {\r\n        if (message.trim()) {\r\n            socket.emit('send_notification', {\r\n                message: message,\r\n                user: user,\r\n                target: 'all',\r\n            });\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    const handleSelectChatUser = (user) => {\r\n        setSelectedUser(user);\r\n        setChatMessages([]); // Limpiar el chat anterior\r\n    };\r\n\r\n    const handleSendMessage = () => {\r\n        if (message.trim() && selectedUser) {\r\n            const chatMessage = {\r\n                sender: user,\r\n                receiver: selectedUser,\r\n                message: message,\r\n                timestamp: new Date(),\r\n            };\r\n            socket.emit('send_chat_message', chatMessage);\r\n            setMessage('');\r\n            setChatMessages((prevMessages) => [...prevMessages, chatMessage]); // Agregar al chat local\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!user ? (\r\n                <div>\r\n                    <button onClick={() => handleUserSelect('Usuario 1')}>Usuario 1</button>\r\n                    <button onClick={() => handleUserSelect('Usuario 2')}>Usuario 2</button>\r\n                    <button onClick={() => handleUserSelect('Usuario 3')}>Usuario 3</button>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <h2>Bienvenido, {user}</h2>\r\n                    <button onClick={handleDisconnect}>Desconectar</button>\r\n                    <div>\r\n                        <h3>Selecciona un usuario para chatear:</h3>\r\n                        <div>\r\n                            {users.map((u) => (\r\n                                u !== user && (\r\n                                    <button key={u} onClick={() => handleSelectChatUser(u)}>\r\n                                        {u}\r\n                                    </button>\r\n                                )\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {selectedUser && (\r\n                        <div>\r\n                            <h3>Chat con {selectedUser}</h3>\r\n                            <div>\r\n                                {chatMessages.map((msg, idx) => (\r\n                                    <div key={idx}>\r\n                                        <strong>{msg.sender}: </strong>{msg.message}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            <textarea\r\n                                value={message}\r\n                                onChange={(e) => setMessage(e.target.value)}\r\n                                placeholder=\"Escribe un mensaje\"\r\n                            />\r\n                            <button onClick={handleSendMessage}>Enviar</button>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div>\r\n                        <textarea\r\n                            value={message}\r\n                            onChange={(e) => setMessage(e.target.value)}\r\n                            placeholder=\"Escribe una notificación\"\r\n                        />\r\n                        <button onClick={handleSendNotification}>Enviar Notificación</button>\r\n                    </div>\r\n\r\n                    <Notification notifications={notifications} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}