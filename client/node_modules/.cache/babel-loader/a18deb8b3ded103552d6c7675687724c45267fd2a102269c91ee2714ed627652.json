{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Franco\\\\Desktop\\\\Proyecto_Notificaciones\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport './App.css'; // Importa el archivo CSS para estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState('');\n  const [notifications, setNotifications] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [unreadNotifications, setUnreadNotifications] = useState(0); // Contador de notificaciones no leídas\n  const [showNotifications, setShowNotifications] = useState(false); // Para mostrar u ocultar notificaciones\n\n  useEffect(() => {\n    socket.on('user_update', users => {\n      setUsers(users);\n    });\n    socket.on('notification', notification => {\n      setNotifications(prevNotifications => {\n        const newNotifications = [notification, ...prevNotifications];\n        setUnreadNotifications(prev => prev + 1); // Incrementar notificaciones no leídas\n        return newNotifications.slice(0, 10); // Limitar a 10 notificaciones\n      });\n    });\n    socket.on('chat_message', message => {\n      if (message.receiver === user && message.sender === selectedUser || message.sender === user && message.receiver === selectedUser) {\n        setChatMessages(prevMessages => [...prevMessages, message]);\n      }\n    });\n    return () => {\n      socket.off('user_update');\n      socket.off('notification');\n      socket.off('chat_message');\n    };\n  }, [user, selectedUser]);\n  const handleUserSelect = selectedUser => {\n    setSelectedUser(selectedUser);\n    setChatMessages([]); // Limpiar chat anterior\n    setUnreadNotifications(0); // Resetear notificaciones no leídas al seleccionar chat\n  };\n  const handleSendMessage = () => {\n    if (message.trim() && selectedUser) {\n      const chatMessage = {\n        sender: user,\n        receiver: selectedUser,\n        message: message,\n        timestamp: new Date().toLocaleTimeString()\n      };\n      socket.emit('send_chat_message', chatMessage);\n      setMessage('');\n      setChatMessages(prevMessages => [...prevMessages, chatMessage]); // Agregar mensaje localmente\n    }\n  };\n  const handleNotificationClick = () => {\n    setShowNotifications(!showNotifications);\n    setUnreadNotifications(0); // Marcar todas como leídas cuando se hace click\n  };\n  const handleDisconnect = () => {\n    socket.emit('user_disconnect');\n    setUser(null);\n    setSelectedUser(null);\n    setChatMessages([]);\n    setNotifications([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"user-button\",\n        onClick: () => handleUserSelect('Usuario 1'),\n        children: \"Usuario 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"user-button\",\n        onClick: () => handleUserSelect('Usuario 2'),\n        children: \"Usuario 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"user-button\",\n        onClick: () => handleUserSelect('Usuario 3'),\n        children: \"Usuario 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Bienvenido, \", user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"disconnect-button\",\n        onClick: handleDisconnect,\n        children: \"Desconectar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-bell\",\n        onClick: handleNotificationClick,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bell-icon\",\n          children: \"\\uD83D\\uDD14\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), unreadNotifications > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-count\",\n          children: unreadNotifications\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), showNotifications && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-dropdown\",\n        children: notifications.map((notif, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-item\",\n          children: [notif.message, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notification-time\",\n            children: notif.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 53\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-user-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Selecciona un usuario para chatear:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), users.map(u => u !== user ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"user-chat-button\",\n          onClick: () => handleUserSelect(u),\n          children: u\n        }, u, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }, this) : null)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Chat con \", selectedUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-box\",\n          children: chatMessages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: msg.sender === user ? 'my-message' : 'other-message',\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.sender, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 41\n            }, this), \" \", msg.message, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timestamp\",\n              children: msg.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 86\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Escribe un mensaje...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"zkesEd0r9AwLg74QBaflwVL+n8Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","App","_s","user","setUser","users","setUsers","message","setMessage","notifications","setNotifications","selectedUser","setSelectedUser","chatMessages","setChatMessages","unreadNotifications","setUnreadNotifications","showNotifications","setShowNotifications","on","notification","prevNotifications","newNotifications","prev","slice","receiver","sender","prevMessages","off","handleUserSelect","handleSendMessage","trim","chatMessage","timestamp","Date","toLocaleTimeString","emit","handleNotificationClick","handleDisconnect","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","notif","idx","u","msg","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Franco/Desktop/Proyecto_Notificaciones/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport './App.css'; // Importa el archivo CSS para estilos\r\n\r\nconst socket = io('http://localhost:4000');\r\n\r\nfunction App() {\r\n    const [user, setUser] = useState(null);\r\n    const [users, setUsers] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [chatMessages, setChatMessages] = useState([]);\r\n    const [unreadNotifications, setUnreadNotifications] = useState(0); // Contador de notificaciones no leídas\r\n    const [showNotifications, setShowNotifications] = useState(false); // Para mostrar u ocultar notificaciones\r\n\r\n    useEffect(() => {\r\n        socket.on('user_update', (users) => {\r\n            setUsers(users);\r\n        });\r\n\r\n        socket.on('notification', (notification) => {\r\n            setNotifications((prevNotifications) => {\r\n                const newNotifications = [notification, ...prevNotifications];\r\n                setUnreadNotifications(prev => prev + 1); // Incrementar notificaciones no leídas\r\n                return newNotifications.slice(0, 10); // Limitar a 10 notificaciones\r\n            });\r\n        });\r\n\r\n        socket.on('chat_message', (message) => {\r\n            if ((message.receiver === user && message.sender === selectedUser) || \r\n                (message.sender === user && message.receiver === selectedUser)) {\r\n                setChatMessages((prevMessages) => [...prevMessages, message]);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.off('user_update');\r\n            socket.off('notification');\r\n            socket.off('chat_message');\r\n        };\r\n    }, [user, selectedUser]);\r\n\r\n    const handleUserSelect = (selectedUser) => {\r\n        setSelectedUser(selectedUser);\r\n        setChatMessages([]); // Limpiar chat anterior\r\n        setUnreadNotifications(0); // Resetear notificaciones no leídas al seleccionar chat\r\n    };\r\n\r\n    const handleSendMessage = () => {\r\n        if (message.trim() && selectedUser) {\r\n            const chatMessage = {\r\n                sender: user,\r\n                receiver: selectedUser,\r\n                message: message,\r\n                timestamp: new Date().toLocaleTimeString(),\r\n            };\r\n            socket.emit('send_chat_message', chatMessage);\r\n            setMessage('');\r\n            setChatMessages((prevMessages) => [...prevMessages, chatMessage]); // Agregar mensaje localmente\r\n        }\r\n    };\r\n\r\n    const handleNotificationClick = () => {\r\n        setShowNotifications(!showNotifications);\r\n        setUnreadNotifications(0); // Marcar todas como leídas cuando se hace click\r\n    };\r\n\r\n    const handleDisconnect = () => {\r\n        socket.emit('user_disconnect');\r\n        setUser(null);\r\n        setSelectedUser(null);\r\n        setChatMessages([]);\r\n        setNotifications([]);\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {!user ? (\r\n                <div className=\"user-selection\">\r\n                    <button className=\"user-button\" onClick={() => handleUserSelect('Usuario 1')}>Usuario 1</button>\r\n                    <button className=\"user-button\" onClick={() => handleUserSelect('Usuario 2')}>Usuario 2</button>\r\n                    <button className=\"user-button\" onClick={() => handleUserSelect('Usuario 3')}>Usuario 3</button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"dashboard\">\r\n                    <h2>Bienvenido, {user}</h2>\r\n                    <button className=\"disconnect-button\" onClick={handleDisconnect}>Desconectar</button>\r\n\r\n                    {/* Notificaciones */}\r\n                    <div className=\"notification-bell\" onClick={handleNotificationClick}>\r\n                        <span className=\"bell-icon\">🔔</span>\r\n                        {unreadNotifications > 0 && <span className=\"notification-count\">{unreadNotifications}</span>}\r\n                    </div>\r\n\r\n                    {/* Mostrar notificaciones */}\r\n                    {showNotifications && (\r\n                        <div className=\"notifications-dropdown\">\r\n                            {notifications.map((notif, idx) => (\r\n                                <div key={idx} className=\"notification-item\">\r\n                                    {notif.message} <span className=\"notification-time\">{notif.timestamp}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Selección de chat */}\r\n                    <div className=\"chat-user-selection\">\r\n                        <h3>Selecciona un usuario para chatear:</h3>\r\n                        {users.map((u) =>\r\n                            u !== user ? (\r\n                                <button key={u} className=\"user-chat-button\" onClick={() => handleUserSelect(u)}>\r\n                                    {u}\r\n                                </button>\r\n                            ) : null\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Chat */}\r\n                    {selectedUser && (\r\n                        <div className=\"chat-container\">\r\n                            <h3>Chat con {selectedUser}</h3>\r\n                            <div className=\"chat-box\">\r\n                                {chatMessages.map((msg, idx) => (\r\n                                    <div key={idx} className={msg.sender === user ? 'my-message' : 'other-message'}>\r\n                                        <strong>{msg.sender}:</strong> {msg.message} <span className=\"timestamp\">{msg.timestamp}</span>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <textarea\r\n                                value={message}\r\n                                onChange={(e) => setMessage(e.target.value)}\r\n                                placeholder=\"Escribe un mensaje...\"\r\n                            />\r\n                            <button onClick={handleSendMessage}>Enviar</button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACnE,MAAM,CAACsB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnEC,SAAS,CAAC,MAAM;IACZI,MAAM,CAACmB,EAAE,CAAC,aAAa,EAAGd,KAAK,IAAK;MAChCC,QAAQ,CAACD,KAAK,CAAC;IACnB,CAAC,CAAC;IAEFL,MAAM,CAACmB,EAAE,CAAC,cAAc,EAAGC,YAAY,IAAK;MACxCV,gBAAgB,CAAEW,iBAAiB,IAAK;QACpC,MAAMC,gBAAgB,GAAG,CAACF,YAAY,EAAE,GAAGC,iBAAiB,CAAC;QAC7DL,sBAAsB,CAACO,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;QAC1C,OAAOD,gBAAgB,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MAC1C,CAAC,CAAC;IACN,CAAC,CAAC;IAEFxB,MAAM,CAACmB,EAAE,CAAC,cAAc,EAAGZ,OAAO,IAAK;MACnC,IAAKA,OAAO,CAACkB,QAAQ,KAAKtB,IAAI,IAAII,OAAO,CAACmB,MAAM,KAAKf,YAAY,IAC5DJ,OAAO,CAACmB,MAAM,KAAKvB,IAAI,IAAII,OAAO,CAACkB,QAAQ,KAAKd,YAAa,EAAE;QAChEG,eAAe,CAAEa,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEpB,OAAO,CAAC,CAAC;MACjE;IACJ,CAAC,CAAC;IAEF,OAAO,MAAM;MACTP,MAAM,CAAC4B,GAAG,CAAC,aAAa,CAAC;MACzB5B,MAAM,CAAC4B,GAAG,CAAC,cAAc,CAAC;MAC1B5B,MAAM,CAAC4B,GAAG,CAAC,cAAc,CAAC;IAC9B,CAAC;EACL,CAAC,EAAE,CAACzB,IAAI,EAAEQ,YAAY,CAAC,CAAC;EAExB,MAAMkB,gBAAgB,GAAIlB,YAAY,IAAK;IACvCC,eAAe,CAACD,YAAY,CAAC;IAC7BG,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;IACrBE,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMc,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIvB,OAAO,CAACwB,IAAI,CAAC,CAAC,IAAIpB,YAAY,EAAE;MAChC,MAAMqB,WAAW,GAAG;QAChBN,MAAM,EAAEvB,IAAI;QACZsB,QAAQ,EAAEd,YAAY;QACtBJ,OAAO,EAAEA,OAAO;QAChB0B,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;MAC7C,CAAC;MACDnC,MAAM,CAACoC,IAAI,CAAC,mBAAmB,EAAEJ,WAAW,CAAC;MAC7CxB,UAAU,CAAC,EAAE,CAAC;MACdM,eAAe,CAAEa,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEK,WAAW,CAAC,CAAC,CAAC,CAAC;IACvE;EACJ,CAAC;EAED,MAAMK,uBAAuB,GAAGA,CAAA,KAAM;IAClCnB,oBAAoB,CAAC,CAACD,iBAAiB,CAAC;IACxCD,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMsB,gBAAgB,GAAGA,CAAA,KAAM;IAC3BtC,MAAM,CAACoC,IAAI,CAAC,iBAAiB,CAAC;IAC9BhC,OAAO,CAAC,IAAI,CAAC;IACbQ,eAAe,CAAC,IAAI,CAAC;IACrBE,eAAe,CAAC,EAAE,CAAC;IACnBJ,gBAAgB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,oBACIX,OAAA;IAAKwC,SAAS,EAAC,KAAK;IAAAC,QAAA,EACf,CAACrC,IAAI,gBACFJ,OAAA;MAAKwC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BzC,OAAA;QAAQwC,SAAS,EAAC,aAAa;QAACE,OAAO,EAAEA,CAAA,KAAMZ,gBAAgB,CAAC,WAAW,CAAE;QAAAW,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChG9C,OAAA;QAAQwC,SAAS,EAAC,aAAa;QAACE,OAAO,EAAEA,CAAA,KAAMZ,gBAAgB,CAAC,WAAW,CAAE;QAAAW,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChG9C,OAAA;QAAQwC,SAAS,EAAC,aAAa;QAACE,OAAO,EAAEA,CAAA,KAAMZ,gBAAgB,CAAC,WAAW,CAAE;QAAAW,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/F,CAAC,gBAEN9C,OAAA;MAAKwC,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBzC,OAAA;QAAAyC,QAAA,GAAI,cAAY,EAACrC,IAAI;MAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3B9C,OAAA;QAAQwC,SAAS,EAAC,mBAAmB;QAACE,OAAO,EAAEH,gBAAiB;QAAAE,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAGrF9C,OAAA;QAAKwC,SAAS,EAAC,mBAAmB;QAACE,OAAO,EAAEJ,uBAAwB;QAAAG,QAAA,gBAChEzC,OAAA;UAAMwC,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACpC9B,mBAAmB,GAAG,CAAC,iBAAIhB,OAAA;UAAMwC,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAEzB;QAAmB;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5F,CAAC,EAGL5B,iBAAiB,iBACdlB,OAAA;QAAKwC,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAClC/B,aAAa,CAACqC,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBAC1BjD,OAAA;UAAewC,SAAS,EAAC,mBAAmB;UAAAC,QAAA,GACvCO,KAAK,CAACxC,OAAO,EAAC,GAAC,eAAAR,OAAA;YAAMwC,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAEO,KAAK,CAACd;UAAS;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GADtEG,GAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR,eAGD9C,OAAA;QAAKwC,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAChCzC,OAAA;UAAAyC,QAAA,EAAI;QAAmC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC3CxC,KAAK,CAACyC,GAAG,CAAEG,CAAC,IACTA,CAAC,KAAK9C,IAAI,gBACNJ,OAAA;UAAgBwC,SAAS,EAAC,kBAAkB;UAACE,OAAO,EAAEA,CAAA,KAAMZ,gBAAgB,CAACoB,CAAC,CAAE;UAAAT,QAAA,EAC3ES;QAAC,GADOA,CAAC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CAAC,GACT,IACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,EAGLlC,YAAY,iBACTZ,OAAA;QAAKwC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BzC,OAAA;UAAAyC,QAAA,GAAI,WAAS,EAAC7B,YAAY;QAAA;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChC9C,OAAA;UAAKwC,SAAS,EAAC,UAAU;UAAAC,QAAA,EACpB3B,YAAY,CAACiC,GAAG,CAAC,CAACI,GAAG,EAAEF,GAAG,kBACvBjD,OAAA;YAAewC,SAAS,EAAEW,GAAG,CAACxB,MAAM,KAAKvB,IAAI,GAAG,YAAY,GAAG,eAAgB;YAAAqC,QAAA,gBAC3EzC,OAAA;cAAAyC,QAAA,GAASU,GAAG,CAACxB,MAAM,EAAC,GAAC;YAAA;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACK,GAAG,CAAC3C,OAAO,EAAC,GAAC,eAAAR,OAAA;cAAMwC,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAEU,GAAG,CAACjB;YAAS;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GADzFG,GAAG;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACN9C,OAAA;UACIoD,KAAK,EAAE5C,OAAQ;UACf6C,QAAQ,EAAGC,CAAC,IAAK7C,UAAU,CAAC6C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC5CI,WAAW,EAAC;QAAuB;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACF9C,OAAA;UAAQ0C,OAAO,EAAEX,iBAAkB;UAAAU,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAC3C,EAAA,CAvIQD,GAAG;AAAAuD,EAAA,GAAHvD,GAAG;AAyIZ,eAAeA,GAAG;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}