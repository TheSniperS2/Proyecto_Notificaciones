{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Franco\\\\Desktop\\\\Proyecto_Notificaciones\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [newMessages, setNewMessages] = useState([]);\n  useEffect(() => {\n    socket.on('user_update', users => {\n      setUsers(users);\n    });\n    socket.on('new_messages', messages => {\n      setNewMessages(messages); // Recibir mensajes no leídos\n    });\n    socket.on('chat_message', message => {\n      if (message.receiver === user || message.sender === user) {\n        setChatMessages(prevMessages => [...prevMessages, message]);\n      }\n    });\n    return () => {\n      socket.off('user_update');\n      socket.off('new_messages');\n      socket.off('chat_message');\n    };\n  }, [user]);\n  const handleUserClick = username => {\n    setUser(username);\n    socket.emit('user_connected', username); // Emitir el evento con el nombre de usuario\n  };\n  const handleUserSelect = selectedUser => {\n    setSelectedUser(selectedUser);\n    setChatMessages([]); // Limpiar mensajes previos\n  };\n  const handleSendMessage = () => {\n    if (message.trim() && selectedUser) {\n      const chatMessage = {\n        sender: user,\n        receiver: selectedUser,\n        message: message,\n        timestamp: new Date().toLocaleTimeString()\n      };\n      socket.emit('send_chat_message', chatMessage);\n      setMessage('');\n      setChatMessages(prevMessages => [...prevMessages, chatMessage]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selecciona tu usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"user-button\",\n        onClick: () => handleUserClick('Usuario 1'),\n        children: \"Usuario 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"user-button\",\n        onClick: () => handleUserClick('Usuario 2'),\n        children: \"Usuario 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"user-button\",\n        onClick: () => handleUserClick('Usuario 3'),\n        children: \"Usuario 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"sidebar-title\",\n          children: \"Usuarios Conectados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-list\",\n          children: users.map(u => u !== user && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-item\",\n            onClick: () => handleUserSelect(u),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-name\",\n              children: u\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this)\n          }, u, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: selectedUser ? /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Chat con \", selectedUser]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Selecciona un usuario para empezar a chatear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-box\",\n          children: chatMessages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: msg.sender === user ? 'my-message' : 'other-message',\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.sender, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this), \" \", msg.message, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timestamp\",\n              children: msg.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Escribe tu mensaje...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eOdAf5oewnPJiB2zqtbXRkg2mY0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","App","_s","user","setUser","users","setUsers","selectedUser","setSelectedUser","chatMessages","setChatMessages","message","setMessage","newMessages","setNewMessages","on","messages","receiver","sender","prevMessages","off","handleUserClick","username","emit","handleUserSelect","handleSendMessage","trim","chatMessage","timestamp","Date","toLocaleTimeString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","u","msg","idx","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Franco/Desktop/Proyecto_Notificaciones/client/src/App.js"],"sourcesContent":["// App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport './App.css';\r\n\r\nconst socket = io('http://localhost:4000');\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [newMessages, setNewMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on('user_update', (users) => {\r\n      setUsers(users);\r\n    });\r\n\r\n    socket.on('new_messages', (messages) => {\r\n      setNewMessages(messages); // Recibir mensajes no leídos\r\n    });\r\n\r\n    socket.on('chat_message', (message) => {\r\n      if (message.receiver === user || message.sender === user) {\r\n        setChatMessages((prevMessages) => [...prevMessages, message]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('user_update');\r\n      socket.off('new_messages');\r\n      socket.off('chat_message');\r\n    };\r\n  }, [user]);\r\n\r\n  const handleUserClick = (username) => {\r\n    setUser(username);\r\n    socket.emit('user_connected', username); // Emitir el evento con el nombre de usuario\r\n  };\r\n\r\n  const handleUserSelect = (selectedUser) => {\r\n    setSelectedUser(selectedUser);\r\n    setChatMessages([]); // Limpiar mensajes previos\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (message.trim() && selectedUser) {\r\n      const chatMessage = {\r\n        sender: user,\r\n        receiver: selectedUser,\r\n        message: message,\r\n        timestamp: new Date().toLocaleTimeString(),\r\n      };\r\n      socket.emit('send_chat_message', chatMessage);\r\n      setMessage('');\r\n      setChatMessages((prevMessages) => [...prevMessages, chatMessage]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!user ? (\r\n        <div className=\"user-selection\">\r\n          <h2>Selecciona tu usuario</h2>\r\n          <button className=\"user-button\" onClick={() => handleUserClick('Usuario 1')}>\r\n            Usuario 1\r\n          </button>\r\n          <button className=\"user-button\" onClick={() => handleUserClick('Usuario 2')}>\r\n            Usuario 2\r\n          </button>\r\n          <button className=\"user-button\" onClick={() => handleUserClick('Usuario 3')}>\r\n            Usuario 3\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"dashboard\">\r\n          <div className=\"sidebar\">\r\n            <h2 className=\"sidebar-title\">Usuarios Conectados</h2>\r\n            <div className=\"users-list\">\r\n              {users.map(\r\n                (u) =>\r\n                  u !== user && (\r\n                    <div\r\n                      key={u}\r\n                      className=\"user-item\"\r\n                      onClick={() => handleUserSelect(u)}\r\n                    >\r\n                      <span className=\"user-name\">{u}</span>\r\n                    </div>\r\n                  )\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"chat-container\">\r\n            <div className=\"chat-header\">\r\n              {selectedUser ? (\r\n                <h3>Chat con {selectedUser}</h3>\r\n              ) : (\r\n                <h3>Selecciona un usuario para empezar a chatear</h3>\r\n              )}\r\n            </div>\r\n            {selectedUser && (\r\n              <div className=\"chat-box\">\r\n                {chatMessages.map((msg, idx) => (\r\n                  <div\r\n                    key={idx}\r\n                    className={msg.sender === user ? 'my-message' : 'other-message'}\r\n                  >\r\n                    <strong>{msg.sender}:</strong> {msg.message}{' '}\r\n                    <span className=\"timestamp\">{msg.timestamp}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {selectedUser && (\r\n              <div className=\"chat-input\">\r\n                <textarea\r\n                  value={message}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  placeholder=\"Escribe tu mensaje...\"\r\n                />\r\n                <button onClick={handleSendMessage}>Enviar</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACdI,MAAM,CAACe,EAAE,CAAC,aAAa,EAAGV,KAAK,IAAK;MAClCC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC;IAEFL,MAAM,CAACe,EAAE,CAAC,cAAc,EAAGC,QAAQ,IAAK;MACtCF,cAAc,CAACE,QAAQ,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC;IAEFhB,MAAM,CAACe,EAAE,CAAC,cAAc,EAAGJ,OAAO,IAAK;MACrC,IAAIA,OAAO,CAACM,QAAQ,KAAKd,IAAI,IAAIQ,OAAO,CAACO,MAAM,KAAKf,IAAI,EAAE;QACxDO,eAAe,CAAES,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAER,OAAO,CAAC,CAAC;MAC/D;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXX,MAAM,CAACoB,GAAG,CAAC,aAAa,CAAC;MACzBpB,MAAM,CAACoB,GAAG,CAAC,cAAc,CAAC;MAC1BpB,MAAM,CAACoB,GAAG,CAAC,cAAc,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,CAACjB,IAAI,CAAC,CAAC;EAEV,MAAMkB,eAAe,GAAIC,QAAQ,IAAK;IACpClB,OAAO,CAACkB,QAAQ,CAAC;IACjBtB,MAAM,CAACuB,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC,CAAC,CAAC;EAC3C,CAAC;EAED,MAAME,gBAAgB,GAAIjB,YAAY,IAAK;IACzCC,eAAe,CAACD,YAAY,CAAC;IAC7BG,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAId,OAAO,CAACe,IAAI,CAAC,CAAC,IAAInB,YAAY,EAAE;MAClC,MAAMoB,WAAW,GAAG;QAClBT,MAAM,EAAEf,IAAI;QACZc,QAAQ,EAAEV,YAAY;QACtBI,OAAO,EAAEA,OAAO;QAChBiB,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;MAC3C,CAAC;MACD9B,MAAM,CAACuB,IAAI,CAAC,mBAAmB,EAAEI,WAAW,CAAC;MAC7Cf,UAAU,CAAC,EAAE,CAAC;MACdF,eAAe,CAAES,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEQ,WAAW,CAAC,CAAC;IACnE;EACF,CAAC;EAED,oBACE5B,OAAA;IAAKgC,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjB,CAAC7B,IAAI,gBACJJ,OAAA;MAAKgC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BjC,OAAA;QAAAiC,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BrC,OAAA;QAAQgC,SAAS,EAAC,aAAa;QAACM,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAAC,WAAW,CAAE;QAAAW,QAAA,EAAC;MAE7E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTrC,OAAA;QAAQgC,SAAS,EAAC,aAAa;QAACM,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAAC,WAAW,CAAE;QAAAW,QAAA,EAAC;MAE7E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTrC,OAAA;QAAQgC,SAAS,EAAC,aAAa;QAACM,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAAC,WAAW,CAAE;QAAAW,QAAA,EAAC;MAE7E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBAENrC,OAAA;MAAKgC,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBjC,OAAA;QAAKgC,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBjC,OAAA;UAAIgC,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtDrC,OAAA;UAAKgC,SAAS,EAAC,YAAY;UAAAC,QAAA,EACxB3B,KAAK,CAACiC,GAAG,CACPC,CAAC,IACAA,CAAC,KAAKpC,IAAI,iBACRJ,OAAA;YAEEgC,SAAS,EAAC,WAAW;YACrBM,OAAO,EAAEA,CAAA,KAAMb,gBAAgB,CAACe,CAAC,CAAE;YAAAP,QAAA,eAEnCjC,OAAA;cAAMgC,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAEO;YAAC;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC,GAJjCG,CAAC;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKH,CAEX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNrC,OAAA;QAAKgC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BjC,OAAA;UAAKgC,SAAS,EAAC,aAAa;UAAAC,QAAA,EACzBzB,YAAY,gBACXR,OAAA;YAAAiC,QAAA,GAAI,WAAS,EAACzB,YAAY;UAAA;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,gBAEhCrC,OAAA;YAAAiC,QAAA,EAAI;UAA4C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QACrD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EACL7B,YAAY,iBACXR,OAAA;UAAKgC,SAAS,EAAC,UAAU;UAAAC,QAAA,EACtBvB,YAAY,CAAC6B,GAAG,CAAC,CAACE,GAAG,EAAEC,GAAG,kBACzB1C,OAAA;YAEEgC,SAAS,EAAES,GAAG,CAACtB,MAAM,KAAKf,IAAI,GAAG,YAAY,GAAG,eAAgB;YAAA6B,QAAA,gBAEhEjC,OAAA;cAAAiC,QAAA,GAASQ,GAAG,CAACtB,MAAM,EAAC,GAAC;YAAA;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACI,GAAG,CAAC7B,OAAO,EAAE,GAAG,eAChDZ,OAAA;cAAMgC,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAEQ,GAAG,CAACZ;YAAS;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GAJ7CK,GAAG;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKL,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,EACA7B,YAAY,iBACXR,OAAA;UAAKgC,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBjC,OAAA;YACE2C,KAAK,EAAE/B,OAAQ;YACfgC,QAAQ,EAAGC,CAAC,IAAKhC,UAAU,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC5CI,WAAW,EAAC;UAAuB;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eACFrC,OAAA;YAAQsC,OAAO,EAAEZ,iBAAkB;YAAAO,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClC,EAAA,CA5HQD,GAAG;AAAA8C,EAAA,GAAH9C,GAAG;AA8HZ,eAAeA,GAAG;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}